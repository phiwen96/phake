

function (ph_create_modules)

	set (prefix ARG)
	set (NoValues DONT_ERASE_MODULE_IF_NOT_DEFINED)
	set (SingleValues NAME INCLUDE SRC)
	set (MultiValues MODULES BAJS)

	cmake_parse_arguments (${prefix} "${NoValues}" "${SingleValues}" "${MultiValues}" ${ARGN})

	if (NOT DONT_ERASE_MODULE_IF_NOT_DEFINED)
		file (GLOB include "${ARG_INCLUDE}/*.hpp")
		file (GLOB src "${ARG_SRC}/*.cpp")
		foreach (file ${include} ${src})
			get_filename_component (name ${file} NAME_WE)
			message(${name})
			list (FIND ARG_MODULES "${name}" _index)
			if (${_index} GREATER -1)
			else ()
				# message("deleting leftover module \"${name}\"")
				# file (REMOVE ${file})
				# message(${file})
			endif ()
		endforeach ()
	endif ()

	if (ARG_MODULES)
		foreach (module_name IN LISTS ARG_MODULES)
			set (header_file "${ARG_INCLUDE}/${module_name}.hpp")
			set (source_file "${ARG_SRC}/${module_name}.cpp")
			if (EXISTS ${header_file})
				# message("${header_file} already exists.")
			else ()
				# message("creating ${header_file}")
				file (WRITE "${header_file}" "#pragma once")
			endif ()
			if (EXISTS ${source_file})
				# message("${source_file} already exists.")
			else ()
				# message ("creating ${header_file}")
				file (WRITE "${source_file}" "#include \"${module_name}\"")
			endif ()
		endforeach ()
	endif ()
endfunction ()